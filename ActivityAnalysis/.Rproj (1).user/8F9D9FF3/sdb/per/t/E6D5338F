{
    "contents" : "---\ntitle: \"Actical data analysis\"\nauthor: Peter Kamerman \ndate: '`r format(Sys.Date(), \"%d %B %Y\")`'\noutput: \n  html_document:\n    theme: flatly\n    highlight: haddock\n    toc: true\n    toc_depth: 4\n    number_sections: false\n    self_contained: true\n    keep_md: true\n---\n\n# Overview\nThis document describes the analysis of actical activity data from 68 HIV-positive patients who agreed to wear acticals for two weeks. Acticals were worn for 24-hours each day. Week one was an acclimation week, and the analyses described here include for the second week (7 days) only. One participant *(# 176)*, only had 5 days of recordings in the second week. \n\n# Data cleaning\n24-hour activity data for the last 7 days of actical wear was imported into MSExcel and saved a single, \"long format\" file with columns:\n\n- Pt ID: participant id code\n\n- Pain: yes / no\n\n- Employed: employed (E) / unemployed (U)\n\n- Time: time of day (hh:mm:ss) in one-minute intervals\t\n\n- Day: date (dd-mmm-yyyy)\t\n\n- Count: raw activity count\n\n- % count: study participant raw activity count data standardised to the maximum count attained on each actical when worn by an investigator (AW) undertaking maximal activity (stair climbing) (participant raw activity count/investigator maximum activity count *100)\n\n- pcount.ptmax: study participant raw activity count data standardised to the maximum activity count recorded by the participant during the secpnd 7-day period (participant raw activity count/maximum participant activity count * 100) \n\nThe complete MSExcel file was exported as a comma delimited file (csv), and the remaining data cleaning and data anlyses were performed using **R version 3.1.2 (2014-10-31) -- \"Pumpkin Helmet\"**.\n\nThe following section describes the cleaning and analysis process.\n\n## Load required packages\n```{r Load_required_packages, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Load packages\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(scales) # required for ggplot\nlibrary(exactRankTests)\nlibrary(knitr)\n```\n\n## Import data\n```{r Import_data, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Import\ndata<-read.csv(\"activity.data.csv\", header=T)\n```\n\n## Convert \"data\" to dplyr object and get an overview of the data before cleaning\n```{r convert_to_dplyr, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Convert data\ndata.1<-tbl_df(data)\n# Look at data\nstr(data.1)\n```\n\n## Basic data cleaning\n### Set column names\n**(Units and definitions remain the same as described in [Data cleaning])**\n\n- Pt ID => id\n\n- Pain => pain\n\n- Employed => employed\n\n- Time => time\t\n\n- Day => day\n\n- Count => count\n\n- % count => pmax.count \n\n- pcount.ptmax => pptmax.count\n\n```{r rename_columns, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Set names: id = participant id; pain = pain or no pain; employed = employed vs unemployed; time = time of day; day = date; count = raw activity count; pmax.count = percent of actical maximum; pptmax.count = percent of patients maximum \n# Pass result to \"data.1\"\nnames(data.1)<-c(\"id\", \"pain\", \"employed\", \"time\", \"day\", \"count\", \"pmax.count\", \"pptmax.count\")\n```\n\n### Change $id and $pain to factors\n```{r format_to_factors, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\ndata.1$id<-factor(data.1$id)\ndata.1$pain<-factor(data.1$pain, levels=c(0,1), labels=c(\"no.pain\", \"pain\"))\n# Pass \"data.1\" to \"data.2\"\ndata.2<-data.1\n```\n\n### Add a new column ($date-time)\n```{r add_date_time_column, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Add column and pass to \"data.3\"\ndata.3<-unite(data.2, \"date\", time, day, sep=\" \")\ndata.3$date<-dmy_hms(data.3$date)\n```\n\n### Check the dataframe for duplicates\n```{r check_for_duplicates, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\ndim(data.3) \n# There should be (1440m/day * 7 days * 67 participants) + (1440 * 5 days * 1 participant)\n(1440*7*67)+(1440*5*1)\n# There is a duplicate, so remove it\ndata.3<-distinct(data.3)\n```\n\n### Create repeating data/time factor to assist data sorting\n```{r create_sorting_factor, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Create sequence from 1 to 136512 (the number of data rows)\n# Pass it to \"marker\"\nmarker<-tbl_df(data.frame(factor(rep(seq(from=1, to=136512, 1), each=5))))\nnames(marker)<-\"marker\"\nstr(marker)\n# Bind \"marker\" to \"data.3\", and convert to dplyr object\n# Pass to \"data.5\"\ndata.5<-bind_cols(marker, data.3) \ndata.5<-tbl_df(data.5)\n```\n\n## Strip out inactive periods\n### Find the average pmax.count for each 5-minute period\n```{r max_count, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Find mean pmax.count for each five-minute period, and pass to \"marker.2\"\nmarker.2<-tapply(data.5$pmax.count, data.5$marker, mean)\n# Repeat each marker 5 times (so marker and data.5 have the same number of rows)\n# Pass to \"marker.3\" and then convert to a dplyr object\nmarker.3<-rep(marker.2, each=5)\nmarker.3<-tbl_df(data.frame(marker.3))\n# Column bind \"marker.3\" and \"data.3\", convert to a dplyr object, and pass to \"data.6\"\ndata.6<-tbl_df(bind_cols(marker.3, data.5))\n```\n\n### Identify and sort active and inactive periods \n**(mean pmax.count in a 5-minute period > 2.5% => active)**\n\n```{r active_vs_inactive, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Create new column $marker.4 containing logical of pmax.count > 2.5%\n# Pass to \"data.7\"\ndata.7<-mutate(data.6, marker.4=data.6$marker.3>2.5)\n# label days for the 67 with 7 days of data each by creating vector \"days\"\ndays<-c(\"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\") \n# Repeat \"days\" 1440 times (minutes per 24 hours)\n# Pass to \"days.2\"\ndays.2<-rep(days, each=1440)\n# Repeat \"days.2\" 67 times for the 67 participants with 7 days data\n# Pass to \"days.3\", and name column\ndays.3<-data.frame(rep(days.2, times=67))\nnames(days.3)<-\"days\"\n# Repeat process for the one paricuipant with 5 days of data\n# Pass to \"days.4\"\ndays<-c(\"d1\", \"d2\", \"d3\", \"d4\", \"d5\")\ndays.4<-data.frame(rep(days, each=1440))\nnames(days.4)<-\"days\"\n# Row bind \"days.4\" and \"days.3\"\n# Pass to days.5\ndays.5<-tbl_df(rbind(days.3, days.4))\n# Column bind \"days.5\" to \"data.7\"\ndata.8<-tbl_df(bind_cols(days.5, data.7))\n# Have a quick look at the new dplyr object\nstr(data.8)\n# Choose the columns \n# Pass to \"data.9\"\ndata.9<-select(data.8, id, date, days, pain, employed, count, pmax.count, pptmax.count, marker.4)\n# Rename $marker.4 as $active\ndata.9<-rename(data.9, active=marker.4)\n# Change \"?\" for patient 90 to \"U\"\ndata.9$employed<-as.character(data.9$employed)\ndata.9$employed[data.9$employed==\"?\"]<-\"U\"\ndata.9$employed<-factor(data.9$employed)\n# Have a quick look at \"data.9\"\nstr(data.9)\n# Group data for sorting\n# Pass to \"data.10\"\ndata.10<-group_by(data.9, id, days, date, pain, employed)\n# divide into active and inactive periods according to whether the five-minute epochs had a mean pmax.count > 1%\nactive<-filter(data.10, active==\"TRUE\")\nwrite.csv(active, file=\"active.csv\", row.names=F) # save to csv\ninactive<-filter(data.10, active==\"FALSE\")\nwrite.csv(inactive, file=\"inactive.csv\", row.names=F) # save to csv\n```\n\n## Summary of pmax.count data\n### 24-hour data (active and inactive periods)\n#### Median and mean activity per day\n```{r pmax.summary.24h.day, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Extract median and mean data per participant, per day\nmed.1<-data.3 %>%\n    separate(date, c(\"day\", \"time\"), sep=\" \") %>%\n    select(id, pain, employed, day, pmax.count) %>%\n    group_by(id, day, pain, employed) %>%\n    summarise(Median=median(pmax.count), Mean=round(mean(pmax.count), 1))\nmed.1\n# Write to csv\nwrite.csv(med.1, \"summary.24h.day.csv\", row.names=F)\n```\n\n#### Median and mean activity per week\n```{r pmax.summary.24h.week, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Extract median and mean data per participant for the week (or 5 days)\nmed.2<-data.3 %>%\n    separate(date, c(\"day\", \"time\"), sep=\" \") %>%\n    select(id, pain, employed, day, pmax.count) %>%\n    group_by(id, pain, employed) %>%\n    summarise(Median=median(pmax.count), Mean=round(mean(pmax.count), 1))\n# Write to csv\nwrite.csv(med.2, \"summary.24h.week.csv\", row.names=F)\n```\n\n### Active periods only\n#### Median and mean activity per day\n```{r pmax.summary.active.day, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Extract median and mean data per participant, per day\nmed.3<-active %>%\n    ungroup() %>%\n    select(id, pain, employed, days, pmax.count) %>%\n    group_by(id, days, pain, employed) %>%\n    summarise(Median=round(median(as.numeric(pmax.count)),1), Mean=round(mean(as.numeric(pmax.count)),1))\n# Write to csv\nwrite.csv(med.3, \"summary.active.day.csv\", row.names=F)\n```\n\n#### Median and mean activity per week\n```{r pmax.summary.active.week, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Extract median and mean data per participant for the week (or 5 days)\nmed.4<-active %>%\n    ungroup() %>%\n    select(id, pain, employed, pmax.count) %>%\n    group_by(id, pain, employed) %>%\n    summarise(Median=round(median(as.numeric(pmax.count)),1), Mean=round(mean(as.numeric(pmax.count)),1))\n# Write to csv\nwrite.csv(med.4, \"summary.active.week.csv\", row.names=F)\n```\n\n## Univariate analysis of the active period\n### Mean time (in minutes) active per day over the week\n#### Process the data\n```{r time_active, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Group and pass to \"active.1\"\nactive.1<-group_by(active, id, days, pain, employed)\n# Summarise: Number of 5-minute time periods each person spent active per day\n# Pass to \"time.active\"\ntime.active<-summarise(active.1, times=n())\n# Group and pass to \"time.1\"\ntime.1<-ungroup(time.active)\ntime.1<-group_by(time.1, id, pain, employed)\n# Summarise the mean time spent active for each person across the 7 (or 5) days\ntime.2<-summarise(time.1, data=mean(times))\n# View data\ntime.2<-ungroup(time.2)   \n```\n\n#### Pain vs no-pain\n```{r time_active_pain, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=pain, y=data, data=time.2, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(time.2, wilcox.exact(data~pain, paired=F, exact=T))\n# N, Median, IQR, range\nfoo<-time.2 %>%\n    group_by(pain) %>%\n    select(pain,data) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Employed vs unemployed\n```{r time_active_employment, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=employed, y=data, data=time.2, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(time.2, wilcox.exact(data~employed, paired=F, exact=T))\n# N, Median, IQR, range\nfoo<-time.2 %>%\n    group_by(employed) %>%\n    select(employed,data) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Conditional plot of employment and pain status\n```{r time_active_pain.employment, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=pain, y=data, data=time.2, facets=.~employed, color=pain, geom=\"boxplot\")\n# N, Median, IQR, range\nfoo<-time.2 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed,data) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n### Percentage of actical maximum (pmax.count, %) active per day over the week\n#### Process the data\n```{r pmax, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\npmax.count<-summarise(active.1, p.max=max(pmax.count))\npmax.count.1<-ungroup(pmax.count)\npmax.count.1<-group_by(pmax.count.1, id, pain, employed)\npmax.count.2<-ungroup(pmax.count.1)\npmax.count.2<-summarise(pmax.count.1, data=max(p.max))\npmax.count.2<-ungroup(pmax.count.2)\n```\n\n#### Pain vs no-pain\n```{r pmax_pain, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=pain, y=data, data=pmax.count.2, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(pmax.count.2, wilcox.exact(data~pain, paired=F, exact=T))\n# N, Median, IQR, range\nfoo<-pmax.count.2 %>%\n    group_by(pain) %>%\n    select(pain, data) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Employed vs unemployed\n```{r pmax_employment, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=employed, y=data, data=pmax.count.2, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(pmax.count.2, wilcox.exact(data~employed, paired=F, exact=T))\n# N, Median, IQR, range\nfoo<-pmax.count.2 %>%\n    group_by(employed) %>%\n    select(employed,data) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Conditional plot of employment and pain status\n```{r pmax_pain.employment, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=pain, y=data, data=pmax.count.2, facets=.~employed, color=pain, geom=\"boxplot\")\n# N, Median, IQR, range\nfoo<-pmax.count.2 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed,data) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n### Mean sum of daily activity over the week\n#### Process the data\n```{r total_activity, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\nactivity.1<-group_by(active.1, id, days, employed, pain)\nactivity.1<-summarise(activity.1, data=sum(pmax.count))\nactivity.2<-ungroup(activity.1)\nactivity.2<-group_by(activity.2, id, employed, pain)\nactivity.2<-summarise(activity.2, data=round(sum(data)/length(days),0))\nactivity.2<-ungroup(activity.2)\n```\n\n#### Pain vs no pain\n```{r total_activity_pain, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=pain, y=data, data=activity.2, geom=\"boxplot\")\n# Wicoxon rank sum test\nwith(activity.2, wilcox.exact(data~pain, paired=F, exact=T))\n# N, Median, IQR, range\nfoo<-activity.2 %>%\n    group_by(pain) %>%\n    select(pain,data) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Employed vs unemployed\n```{r total_activity_employment, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=employed, y=data, data=activity.2, geom=\"boxplot\")\n# Wicoxon rank sum test\nwith(activity.2, wilcox.exact(data~employed, paired=F, exact=T))\n# N, Median, IQR, range\nfoo<-activity.2 %>%\n    group_by(employed) %>%\n    select(employed,data) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Conditional plot of employment and pain status\n```{r total_activity_pain.employment, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\n# Plot\nqplot(x=pain, y=data, data=activity.2, facets=.~employed, colour=pain, geom=\"boxplot\")\n# N, Median, IQR, range\nfoo<-activity.2 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed,data) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(data), \n              IQR=IQR(data), \n              Min=min(data), \n              Max=max(data))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n## Univariate analysis of complete data \n**(active and inactive periods, data.10)**\n\n### Time spent (minutes) in quartiles ($\\geq$ 75%, 50-74%, 25-49%, and 0-24%) of percent patient maximum activity count per day over the week\n\n#### Fourth quartile ($\\geq$ 75%)\n```{r forth.q, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\nfourth.q<-group_by(data.10, id, date, pain, employed) #> 75%\nfourth.q.1<-filter(fourth.q, pptmax.count>75)\nfourth.q.2<-ungroup(fourth.q.1)\nfourth.q.2<-group_by(fourth.q.2, id, pain, days, employed)\nfourth.q.2<-summarise(fourth.q.2, time=n())\nfourth.q.2<-group_by(fourth.q.2, id, pain, employed)\nday<-data.frame(day=c(rep(7, 67), 5))\nfourth.q.3<-summarise(fourth.q.2, time=sum(time))\nfourth.q.3<-bind_cols(fourth.q.3, day)\nfourth.q.3<-mutate(fourth.q.3, time.2=round(time/day, 2)) # number of minutes per day spent at > 75% patient max\n# Save to csv\nfq<-fourth.q.3 %>%\n    rename(\"minutes per week\"=time, \"days of recording\"=day, \"minutes per day\"=time.2)\nwrite.csv(fq, \"time.active.4q.csv\", row.names=F)\n# Ungroup\nfourth.q.3<-ungroup(fourth.q.3)\n\n# Plot\n# Univariate\nqplot(x=pain, y=time.2, data=fourth.q.3, geom=\"boxplot\")\n# Conditional (with employment status)\nqplot(x=pain, y=time.2, data=fourth.q.3, facets=.~employed, colour=pain, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(fourth.q.3, wilcox.exact(time.2~pain, exact=T, paired=F))\n# N, Median, IQR, range\nfoo<-fourth.q.3 %>%\n    group_by(pain) %>%\n    select(pain,time.2) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-fourth.q.3 %>%\n    group_by(employed) %>%\n    select(employed,time.2) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-fourth.q.3 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed, time.2) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Third quartile (50-74%)\n```{r third.q, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\nthird.q<-group_by(data.10, id, date, pain, employed) # 50-74%\nthird.q.1<-filter(third.q, pptmax.count<=75 & pptmax.count>50)\nthird.q.2<-ungroup(third.q.1)\nthird.q.2<-group_by(third.q.2, id, pain, days, employed)\nthird.q.2<-summarise(third.q.2, time=n())\nthird.q.2<-group_by(third.q.2, id, pain, employed)\nthird.q.3<-summarise(third.q.2, time=sum(time))\nday<-tbl_df(data.frame(id.1=as.numeric(as.character(fourth.q.3$id)), days=c(rep(7, 67), 5)))\nid<-tbl_df(data.frame(id.1=as.numeric(as.character(third.q.3$id))))\nday.2<-semi_join(day,id, by=\"id.1\")\nthird.q.3<-bind_cols(third.q.3, day.2)\nthird.q.3<-select(third.q.3, id, pain, employed, time, days)\nthird.q.3<-mutate(third.q.3, time.2=round(time/days, 2)) # number of minutes per day spent between 50-74% of patient max\n# Save to csv\ntq<-third.q.3 %>%\n    rename(\"minutes per week\"=time, \"days of recording\"=days, \"minutes per day\"=time.2)\nwrite.csv(tq, \"time.active.3q.csv\", row.names=F)\n# Ungroup\nthird.q.3<-ungroup(third.q.3)\n\n# Plot\n# Univariate\nqplot(x=pain, y=time.2, data=third.q.3, geom=\"boxplot\")\n# Conditional (with employment status)\nqplot(x=pain, y=time.2, data=third.q.3, facets=.~employed, colour=pain, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(third.q.3, wilcox.exact(time.2~pain, exact=T, paired=F))\n# N, Median, IQR, range\nfoo<-third.q.3 %>%\n    group_by(pain) %>%\n    select(pain,time.2) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-third.q.3 %>%\n    group_by(employed) %>%\n    select(employed,time.2) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-third.q.3 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed, time.2) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Second quartile (25-49%)\n```{r second.q, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\nsecond.q<-group_by(data.10, id, date, pain, employed) # 25-49%\nsecond.q.1<-filter(second.q, pptmax.count<=50 & pptmax.count>25)\nsecond.q.2<-ungroup(second.q.1)\nsecond.q.2<-group_by(second.q.2, id, pain, days, employed)\nsecond.q.2<-summarise(second.q.2, time=n())\nsecond.q.2<-group_by(second.q.2, id, pain, employed)\nsecond.q.3<-summarise(second.q.2, time=sum(time))\nday<-tbl_df(data.frame(id.1=as.numeric(as.character(fourth.q.3$id)), days=c(rep(7, 67), 5)))\nid<-tbl_df(data.frame(id.1=as.numeric(as.character(second.q.3$id))))\nday.2<-semi_join(day,id, by=\"id.1\")\nsecond.q.3<-bind_cols(second.q.3, day.2)\nsecond.q.3<-select(second.q.3, id, pain, employed, time, days)\nsecond.q.3<-mutate(second.q.3, time.2=round(time/days, 2)) # number of minutes per day spent between 25-49% of patient max\n# Save to csv\nsq<-second.q.3 %>%\n    rename(\"minutes per week\"=time, \"days of recording\"=days, \"minutes per day\"=time.2)\nwrite.csv(sq, \"time.active.2q.csv\", row.names=F)\n# Ungroup\nsecond.q.3<-ungroup(second.q.3)\n\n# Plot\n# Univariate\nqplot(x=pain, y=time.2, data=second.q.3, geom=\"boxplot\")\n# Conditional (with employment status)\nqplot(x=pain, y=time.2, data=second.q.3, facets=.~employed, colour=pain, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(second.q.3, wilcox.exact(time.2~pain, exact=T, paired=F))\n# N, Median, IQR, range\nfoo<-second.q.3 %>%\n    group_by(pain) %>%\n    select(pain,time.2) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-second.q.3 %>%\n    group_by(employed) %>%\n    select(employed,time.2) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-second.q.3 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed, time.2) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### First quartile (0-24%)\n```{r first.q, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\nfirst.q<-group_by(data.10, id, date, pain, employed) # 0-24%\nfirst.q.1<-filter(first.q, pptmax.count<=25 & pptmax.count>0)\nfirst.q.2<-ungroup(first.q.1)\nfirst.q.2<-group_by(first.q.2, id, pain, days, employed)\nfirst.q.2<-summarise(first.q.2, time=n())\nfirst.q.2<-group_by(first.q.2, id, pain, employed)\nfirst.q.3<-summarise(first.q.2, time=sum(time))\nday<-tbl_df(data.frame(id.1=as.numeric(as.character(fourth.q.3$id)), days=c(rep(7, 67), 5)))\nid<-tbl_df(data.frame(id.1=as.numeric(as.character(first.q.3$id))))\nday.2<-semi_join(day,id, by=\"id.1\")\nfirst.q.3<-bind_cols(first.q.3, day.2)\nfirst.q.3<-select(first.q.3, id, pain, employed, time, days)\nfirst.q.3<-mutate(first.q.3, time.2=round(time/days, 2)) # number of minutes per day spent between 0-24% of patient max\n# Save to csv\nfstq<-first.q.3 %>%\n    rename(\"minutes per week\"=time, \"days of recording\"=days, \"minutes per day\"=time.2)\nwrite.csv(fstq, \"time.active.1q.csv\", row.names=F)\n# Ungroup\nfirst.q.3<-ungroup(first.q.3)\n\n# Plot\n# Univariate\nqplot(x=pain, y=time.2, data=first.q.3, geom=\"boxplot\")\n# Conditional (with employment status)\nqplot(x=pain, y=time.2, data=first.q.3, facets=.~employed, colour=pain, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(first.q.3, wilcox.exact(time.2~pain, exact=T, paired=F))\n# N, Median, IQR, range\nfoo<-first.q.3 %>%\n    group_by(pain) %>%\n    select(pain,time.2) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-first.q.3 %>%\n    group_by(employed) %>%\n    select(employed,time.2) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-first.q.3 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed, time.2) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```\n\n#### Time spent at 0 count\n```{r zero, echo=TRUE, warning=FALSE, message=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60)}\nzero.q<-group_by(data.10, id, date, pain, employed) # =0\nzero.q.1<-filter(zero.q, pptmax.count==0)\nzero.q.2<-ungroup(zero.q.1)\nzero.q.2<-group_by(zero.q.2, id, pain, days, employed)\nzero.q.2<-summarise(zero.q.2, time=n())\nzero.q.2<-group_by(zero.q.2, id, pain, employed)\nzero.q.3<-summarise(zero.q.2, time=sum(time))\nday<-tbl_df(data.frame(id.1=as.numeric(as.character(fourth.q.3$id)), days=c(rep(7, 67), 5)))\nid<-tbl_df(data.frame(id.1=as.numeric(as.character(zero.q.3$id))))\nday.2<-semi_join(day,id, by=\"id.1\")\nzero.q.3<-bind_cols(zero.q.3, day.2)\nzero.q.3<-select(zero.q.3, id, pain, employed, time, days)\nzero.q.3<-mutate(zero.q.3, time.2=round(time/days, 2)) # number of minutes per day spent at 0% of patient max\n# Save to csv\nzq<-zero.q.3 %>%\n    rename(\"minutes per week\"=time, \"days of recording\"=days, \"minutes per day\"=time.2)\nwrite.csv(zq, \"time.active.zero.csv\", row.names=F)\n# Ungroup\nzero.q.3<-ungroup(zero.q.3)\n\n# Plot\n# Univariate\nqplot(x=pain, y=time.2, data=zero.q.3, geom=\"boxplot\")\n# Conditional (with employment status)\nqplot(x=pain, y=time.2, data=zero.q.3, facets=.~employed, colour=pain, geom=\"boxplot\")\n# Wilcoxon rank sum test\nwith(zero.q.3, wilcox.exact(time.2~pain, exact=T, paired=F))\n# N, Median, IQR, range\nfoo<-zero.q.3 %>%\n    group_by(pain) %>%\n    select(pain,time.2) %>%\n    rename(Group=pain) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-zero.q.3 %>%\n    group_by(employed) %>%\n    select(employed,time.2) %>%\n    rename(Group=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n\nfoo<-zero.q.3 %>%\n    group_by(pain, employed) %>%\n    select(pain, employed, time.2) %>%\n    rename(Group.Pain=pain, Group.Employed=employed) %>%\n    summarise(N=n(), \n              Median=median(time.2), \n              IQR=IQR(time.2), \n              Min=min(time.2), \n              Max=max(time.2))\nkable(foo, format=\"markdown\", align=\"l\", digits=0)\n```",
    "created" : 1440062329472.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1996065665",
    "id" : "E6D5338F",
    "lastKnownWriteTime" : 1440075209,
    "path" : "~/GDrive/peter.kamerman/DataAnalysis/HIVResilience/ActivityAnalysis/activity.Rmd",
    "project_path" : "activity.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}